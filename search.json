[
  {
    "objectID": "library-structures.html",
    "href": "library-structures.html",
    "title": "Library preparation & structures",
    "section": "",
    "text": "Published methods for generating direct tRNA sequencing libraries"
  },
  {
    "objectID": "library-structures.html#direct-mrna-sequencing-workflow",
    "href": "library-structures.html#direct-mrna-sequencing-workflow",
    "title": "Library preparation & structures",
    "section": "Direct mRNA sequencing workflow",
    "text": "Direct mRNA sequencing workflow\n\nOxford nanopore SQK-RNA002 nanopore sequencing kit\nThe methods below assume you have some knowledge of how these libraries are generated. Here’s the diagram from the protocol:"
  },
  {
    "objectID": "library-structures.html#the-original-minimalist-approach-ucsc-nanopore-group",
    "href": "library-structures.html#the-original-minimalist-approach-ucsc-nanopore-group",
    "title": "Library preparation & structures",
    "section": "The original, minimalist approach (UCSC Nanopore Group):",
    "text": "The original, minimalist approach (UCSC Nanopore Group):\n\nSource: Thomas et al. 2021, ACS Nano\n\nWorkflow overview\n\nGel purify tRNA\nLigate ~1 µg tRNA to pre-annealed double stranded adapters\nGel purify ligation products\nAttach helicase-loaded RMX adapter\nSPRI bead clean up\nLoad libraries onto flow cell\n\n\n\nCustom adapter sequences (RNA:DNA hybrids)\n5´ splint adapter: /5/CCTAAGrArGrCrArArGrArArGrArArGrCrCrUrGrGrN\n3´ splint adapter: /5Phos/rGrGrCrUrUrCTTCTTGCTCTTAGGTAGTAGGTTC\n\n\nTechnical considerations\n\nGel purification may cause fragmentation of tRNAs\nThe DNA bases in both splint adapters will be interpreted by the RNA basecalling model and will not align well"
  },
  {
    "objectID": "library-structures.html#nano-trnaseq-novoa-lab-crg",
    "href": "library-structures.html#nano-trnaseq-novoa-lab-crg",
    "title": "Library preparation & structures",
    "section": "nano-tRNAseq (Novoa lab, CRG)",
    "text": "nano-tRNAseq (Novoa lab, CRG)\n\nSource: Lucas et al. 2023, Nature Biotechnology\n\nWorkflow overview\n\nColumn purify ~1 µg of small RNA (17-200 nt) using Zymo Clean & Concentrator-5 kit (max input 10 µg)\nLigate ~1 µg input to pre-annealed double stranded adapters\nSPRI bead clean up\nAttach nanopore RTA adapter\nSPRI bead clean up\nReverse transcribe with Maxima RT\nSPRI bead clean up\nAttach helicase-loaded RMX adapter\nSPRI bead clean up\nLoad libraries onto flow cell\n\n\n\nCustom adapter sequences\n5′ RNA splint adapter: /5/rCrCrUrArArGrArGrCrArArGrArArGrArArGrCrCrUrGrGrN\n3′ splint RNA:DNA adapter: /5Phos/rGrGrCrUrUrCrUrUrCrUrUrGrCrUrCrUrUrArGrGrArArArArArArArArArAAAA\n\n\nTechnical considerations\n\nIn our hands, SPRI bead cleanup of ligated tRNAs is highly inefficient\nMaxima RT is a highly processive enzyme, and should make it through much of the structure and modifications on tRNAs. However, if it truncates early it’s no big deal because the cDNA strand is not sequenced."
  },
  {
    "objectID": "sequencing-settings.html",
    "href": "sequencing-settings.html",
    "title": "Sequencing settings",
    "section": "",
    "text": "MinKNOW is the operating software that coordinates setting up a sequencing run on an ONT sequencing device (e.g., a MinION or PromethION). It captures and optionally basecalls your data during the run, and monitors and responds to feedback from flow cells in real time. The first step in setting up a run is selecting the appropriate settings (e.g., making sure the parameters match the flow cell type and sequencing kit you used to prepare and load your library). For tRNA, this involves some extra steps.\n\n\nBack when we first started making tRNA sequencing libraries using the approach from Thomas et al. 2021 and running them with default parameters, our runs looked like this:\n\n\n\n“tRNA sample run”\n\n\nNote the high proportion of “adapter-only” reads (beige bar) relative to the bright green bar that MinKNOW believes are genuine sequencing reads. Lucas et. al 2023 expertly dissects the reasons behind this issue. In brief, MinKNOW’s default settings expect the adapter portion of reads (or adapter-only reads) to transit through the pore in 5 seconds or less, and expect the remaining portion of the RNA molecule (that is, the thing you’re actually looking to sequence), termed the strand, to take at least 2 seconds to pass through the pore. These default settings from ONT were selected with mRNA sequencing in mind.\ntRNA molecules are much shorter than mRNA and in many cases, the strand portion of the read can pass through the pore in under two seconds. The Novoa lab demonstrated that lowering the minimum threshold at which MinKNOW classifies the strand portion of read from 2 seconds to 1 second, combined with lowering the maximum duration for adapter signal from 5 seconds to 2 second, increased the throughput of tRNA sequencing by over an order of magnitude, suggesting that the default RNA sequencing parameters classify many tRNA reads as free adapter.\nTLDR: If you don’t want most of your reads to be inadvertedly discarded, you need to take some extra steps before** you begin sequencing tRNA libraries.**\nNB: To the best of my knowledge, MinKNOW senses the break between adapter and strand portions of a read by looking for signal from the RTA adapter; by default, neither this adapter sequence nor the adjoining poly(A) tail will be incorporated into the FASTQ produced during basecalling. In contrast, the sequence from the double stranded adapters ligated to tRNA ends in the first step of nanopore sequencing protocols is basecalled and incorporated into the read sequence stored in the FASTQ files.\n\n\n\n\n\nWe wanted to be able to use a custom MinKNOW configuration for tRNA in real time during sequencing. To do this, we need to make a few changes to the MinKNOW software.\nMinKNOW’s configuration files live at the following locations:\n\nIn Linux: /opt/ont/minknow/conf/package/\nIn MacOS: /Applications/MinKNOW.app/Contents/Resources/conf/package/\n\nYou will need root permissions to edit and add files in the /package/ folder. We have done this as follows:\n\nAt the bottom of flow_cells.toml, add the following lines:\n\n# custom configs\n\n[FLO-FLG001_short]\nconnector = \"flongle\"\n\n[FLO-MIN106_short]\nconnector = \"minion_mk1\"\n\n[FLO-PRO002_short]\nconnector = \"promethion\"\n\nNavigate to the /sequencing/ folder and identify the .toml files for direct RNA sequencing (sequencing_MIN106_RNA.toml for MinION and sequencing_PRO002_RNA.toml for PromethION). Copy the relevant file(s) to create a second version appended _short, e.g.:\n\nsudo cp sequencing_PRO002_RNA.toml sequencing_PRO002_RNA_short.toml \n\nOpen the new _short version of the RNA.toml file and find the section containing the Read Classification Parameters. It should look like this:\n\n[analysis_configuration.read_classification.parameters]\nrules_in_execution_order = [\n     \"multiple=        (median,gt,350)&(median,lt,990)&(local_median_sd,gt,2)&(duration,gt,0.1)\",\n     \"pore_1=          (local_median,gt,160)&(local_median,lt,280)&(median_sd,gt,0.9)&(median_sd,lt,5)&(local_range,lt,35)&(duration,gt,15)\",\n     \"pore=            (median,gt,160)&(median,lt,280)&(median_sd,gt,0.6)&(median_sd,lt,5)\",\n     \"event=           (median_before,gt,160)&(median_before,lt,280)&(median_before,gt,median)&(median,lt,160)&(median,gt,20)&(duration,lt,0.1)&(event_count,lt,10)\",\n     \"adapter=         (median_before,gt,160)&(median_before,lt,280)&(local_range,gt,5)&(local_range,lt,50)&(local_median,gt,50)&(local_median,lt,120)&(local_median_sd,gt,0.5)&(local_median_sd,lt,2.5)&(duration,lt,5)\",\n     \"strand=          (local_range,gt,25)&(local_range,lt,60)&(local_median,gt,60)&(local_median,lt,115)&(local_median_sd,gt,1)&(local_median_sd,lt,4)&(duration,gt,2)\",\n\nEdit the last number on each of the final lines above so that the duration for adapter ends in lt,2 and the duration for strand ends in gt,1. These are the thresholds in seconds described above.\n\nThe approach above has been tested for R9.4 Flongle and MinION flow cells running on a MK1B MinION connected to M1 Macbook Pro running MacOS Ventura, and on R9.4 flow cells running on a beta PromethION 24 connected to a desktop running Ubuntu 20.04. Both of these combinations were tested with MinKNOW version 23.04.3.\n\n\n\nAfter making the changes above and restarting MinKNOW, FLO-MIN106_short and FLO-PRO002_short will be available as drop down options under Flow Cell Type. Once you select one of these, Direct RNA Sequencing should be the only kit available on the subsequent page. You can set up the rest of the sequencing run in MinKNOW as normal.\n\n\n\nYes. You can find them in the companion repository here, but caveat emptor. The MinKNOW software undergoes frequent updates, and using an outdated .toml file may break your ability to run RNA short mode live. At a minimum, you will want to update the [compatibility] section of the .toml to match the MinKNOW core and Bream versions to whatever version of MinKNOW you’re using. You can find these in the MinKNOW UI under Host Settings &gt; Software, and then mousing over the text Installed Version to get a text box on hover.\n\n\n\n\nThe Novoa lab’s Lucas et. al 2023 has an accompanying README within the nano-tRNAseq repository for setting up alternative configurations.\nAs present, this workflow involves:\n\nrsyncing custom *RNA_short.toml and flow_cells.toml config files containing the same changes to duration parameters described above\nsaving out a bulk fast5 file\nediting the *RNA_short.toml file to add a path to the bulk fast5 file\nrunning a sequencing simulation in MinKNOW from the bulk fast5 file\n\nThe .toml config files in this repo are from a much older version of MinKNOW, and we couldn’t get them working for real time tRNA sequencing. Since sequencing simulations are pretty cumbersome and bulk fast5 files take up a lot of space, we opted instead to edit more recent versions of the sequencing .toml files and run short mode live.\nHowever, if you’re interested in running simulations to test different MinKNOW parameters on the same data, I recommend checking the nano-tRNAseq repository above as well as the documentation for ReadFish from Matt Loose’s lab. Pay particular attention to the list of GOTCHAs on the ReadFish README! If you forget you’re running a .toml file that contains a simulation path to a bulk fast5, bad things can and likely will happen.\n\n\n\nNot yet.\nA short fragment mode was released as a selectable option for nanopore DNA sequencing in March 2022; we expect a similar mode to eventually be made available for direct RNA sequencing runs in a future version of the MinKNOW software."
  },
  {
    "objectID": "sequencing-settings.html#why-use-custom-sequencing-settings-for-trna",
    "href": "sequencing-settings.html#why-use-custom-sequencing-settings-for-trna",
    "title": "Sequencing settings",
    "section": "",
    "text": "Back when we first started making tRNA sequencing libraries using the approach from Thomas et al. 2021 and running them with default parameters, our runs looked like this:\n\n\n\n“tRNA sample run”\n\n\nNote the high proportion of “adapter-only” reads (beige bar) relative to the bright green bar that MinKNOW believes are genuine sequencing reads. Lucas et. al 2023 expertly dissects the reasons behind this issue. In brief, MinKNOW’s default settings expect the adapter portion of reads (or adapter-only reads) to transit through the pore in 5 seconds or less, and expect the remaining portion of the RNA molecule (that is, the thing you’re actually looking to sequence), termed the strand, to take at least 2 seconds to pass through the pore. These default settings from ONT were selected with mRNA sequencing in mind.\ntRNA molecules are much shorter than mRNA and in many cases, the strand portion of the read can pass through the pore in under two seconds. The Novoa lab demonstrated that lowering the minimum threshold at which MinKNOW classifies the strand portion of read from 2 seconds to 1 second, combined with lowering the maximum duration for adapter signal from 5 seconds to 2 second, increased the throughput of tRNA sequencing by over an order of magnitude, suggesting that the default RNA sequencing parameters classify many tRNA reads as free adapter.\nTLDR: If you don’t want most of your reads to be inadvertedly discarded, you need to take some extra steps before** you begin sequencing tRNA libraries.**\nNB: To the best of my knowledge, MinKNOW senses the break between adapter and strand portions of a read by looking for signal from the RTA adapter; by default, neither this adapter sequence nor the adjoining poly(A) tail will be incorporated into the FASTQ produced during basecalling. In contrast, the sequence from the double stranded adapters ligated to tRNA ends in the first step of nanopore sequencing protocols is basecalled and incorporated into the read sequence stored in the FASTQ files."
  },
  {
    "objectID": "sequencing-settings.html#enabling-short-read-mode-in-minknow",
    "href": "sequencing-settings.html#enabling-short-read-mode-in-minknow",
    "title": "Sequencing settings",
    "section": "",
    "text": "We wanted to be able to use a custom MinKNOW configuration for tRNA in real time during sequencing. To do this, we need to make a few changes to the MinKNOW software.\nMinKNOW’s configuration files live at the following locations:\n\nIn Linux: /opt/ont/minknow/conf/package/\nIn MacOS: /Applications/MinKNOW.app/Contents/Resources/conf/package/\n\nYou will need root permissions to edit and add files in the /package/ folder. We have done this as follows:\n\nAt the bottom of flow_cells.toml, add the following lines:\n\n# custom configs\n\n[FLO-FLG001_short]\nconnector = \"flongle\"\n\n[FLO-MIN106_short]\nconnector = \"minion_mk1\"\n\n[FLO-PRO002_short]\nconnector = \"promethion\"\n\nNavigate to the /sequencing/ folder and identify the .toml files for direct RNA sequencing (sequencing_MIN106_RNA.toml for MinION and sequencing_PRO002_RNA.toml for PromethION). Copy the relevant file(s) to create a second version appended _short, e.g.:\n\nsudo cp sequencing_PRO002_RNA.toml sequencing_PRO002_RNA_short.toml \n\nOpen the new _short version of the RNA.toml file and find the section containing the Read Classification Parameters. It should look like this:\n\n[analysis_configuration.read_classification.parameters]\nrules_in_execution_order = [\n     \"multiple=        (median,gt,350)&(median,lt,990)&(local_median_sd,gt,2)&(duration,gt,0.1)\",\n     \"pore_1=          (local_median,gt,160)&(local_median,lt,280)&(median_sd,gt,0.9)&(median_sd,lt,5)&(local_range,lt,35)&(duration,gt,15)\",\n     \"pore=            (median,gt,160)&(median,lt,280)&(median_sd,gt,0.6)&(median_sd,lt,5)\",\n     \"event=           (median_before,gt,160)&(median_before,lt,280)&(median_before,gt,median)&(median,lt,160)&(median,gt,20)&(duration,lt,0.1)&(event_count,lt,10)\",\n     \"adapter=         (median_before,gt,160)&(median_before,lt,280)&(local_range,gt,5)&(local_range,lt,50)&(local_median,gt,50)&(local_median,lt,120)&(local_median_sd,gt,0.5)&(local_median_sd,lt,2.5)&(duration,lt,5)\",\n     \"strand=          (local_range,gt,25)&(local_range,lt,60)&(local_median,gt,60)&(local_median,lt,115)&(local_median_sd,gt,1)&(local_median_sd,lt,4)&(duration,gt,2)\",\n\nEdit the last number on each of the final lines above so that the duration for adapter ends in lt,2 and the duration for strand ends in gt,1. These are the thresholds in seconds described above.\n\nThe approach above has been tested for R9.4 Flongle and MinION flow cells running on a MK1B MinION connected to M1 Macbook Pro running MacOS Ventura, and on R9.4 flow cells running on a beta PromethION 24 connected to a desktop running Ubuntu 20.04. Both of these combinations were tested with MinKNOW version 23.04.3.\n\n\n\nAfter making the changes above and restarting MinKNOW, FLO-MIN106_short and FLO-PRO002_short will be available as drop down options under Flow Cell Type. Once you select one of these, Direct RNA Sequencing should be the only kit available on the subsequent page. You can set up the rest of the sequencing run in MinKNOW as normal.\n\n\n\nYes. You can find them in the companion repository here, but caveat emptor. The MinKNOW software undergoes frequent updates, and using an outdated .toml file may break your ability to run RNA short mode live. At a minimum, you will want to update the [compatibility] section of the .toml to match the MinKNOW core and Bream versions to whatever version of MinKNOW you’re using. You can find these in the MinKNOW UI under Host Settings &gt; Software, and then mousing over the text Installed Version to get a text box on hover."
  },
  {
    "objectID": "sequencing-settings.html#alternative-approach-simulating-runs-from-bulk-fast5-files",
    "href": "sequencing-settings.html#alternative-approach-simulating-runs-from-bulk-fast5-files",
    "title": "Sequencing settings",
    "section": "",
    "text": "The Novoa lab’s Lucas et. al 2023 has an accompanying README within the nano-tRNAseq repository for setting up alternative configurations.\nAs present, this workflow involves:\n\nrsyncing custom *RNA_short.toml and flow_cells.toml config files containing the same changes to duration parameters described above\nsaving out a bulk fast5 file\nediting the *RNA_short.toml file to add a path to the bulk fast5 file\nrunning a sequencing simulation in MinKNOW from the bulk fast5 file\n\nThe .toml config files in this repo are from a much older version of MinKNOW, and we couldn’t get them working for real time tRNA sequencing. Since sequencing simulations are pretty cumbersome and bulk fast5 files take up a lot of space, we opted instead to edit more recent versions of the sequencing .toml files and run short mode live.\nHowever, if you’re interested in running simulations to test different MinKNOW parameters on the same data, I recommend checking the nano-tRNAseq repository above as well as the documentation for ReadFish from Matt Loose’s lab. Pay particular attention to the list of GOTCHAs on the ReadFish README! If you forget you’re running a .toml file that contains a simulation path to a bulk fast5, bad things can and likely will happen."
  },
  {
    "objectID": "sequencing-settings.html#this-all-seems-complicated-cant-i-just-click-a-button-in-minknow-to-change-these-settings",
    "href": "sequencing-settings.html#this-all-seems-complicated-cant-i-just-click-a-button-in-minknow-to-change-these-settings",
    "title": "Sequencing settings",
    "section": "",
    "text": "Not yet.\nA short fragment mode was released as a selectable option for nanopore DNA sequencing in March 2022; we expect a similar mode to eventually be made available for direct RNA sequencing runs in a future version of the MinKNOW software."
  },
  {
    "objectID": "background.html",
    "href": "background.html",
    "title": "Background",
    "section": "",
    "text": "Background and prior work\nAs of the time of this writing (July 2023) three groups have reported tRNA sequencing on Oxford Nanopore platforms:\n\nThomas et al., ACS Nano (2021)\nThis paper from the UCSC Nanopore group established proof of principle for direct RNA sequencing of in vitro transcribed and biological E. coli tRNAs on the Oxford MinION platform. The authors defined alignment parameters for nanopore-sequenced tRNAs, and also tested a variety of combinations of individual purified biological tRNAs, synthetic tRNAs, and total tRNAs ligated with individual adapter species. Finally, this paper describes correlations between known sites of modifications on E. coli tRNAs and mismatches (base calling “errors”) at the same and/or neighboring nucleotide positions.\nThe authors note that most sequencing runs were performed for under 24 hours due to “due to a deterioration in functional channels over time,” and that they restarted some experiments up to 5 times due to pore clogging issues. Yields are in the range of 50-100k reads, depending on the sample.\n\n\nWhite et al., RNA (2023)\nThis publication from our group applied the approach from Thomas et al. above to perform direct tRNA sequencing of S. cerevisiae tRNA on the Oxford MinION platform. We generated tRNA sequencing libraries from five different yeast strains with alterations in tRNA maturation/processing/degradation pathways. We used these tRNA sequencing data to identify analogous basecalling error signals (primarily mismatches) produced by changes in tRNA modifications when tRNA splicing is disrupted, including 2´-phosphates installed during RNA ligation. An GitHub repository for this work can be found here.\nNB: despite consultation with Oxford Nanopore and substantial in-lab troubleshooting, in our hands neither changing RNA inputs nor adapter ratios made a substantive impact on either library throughput or the ratio of free adapter to sequencing reads reported in the MinKNOW software during the run.\n\n\nLucas et al., Nature Biotechnology (2023)\nThis paper from the Novoa lab elucidated the reason for the perplexing behavior above — the MinKNOW software distinguishes free adapters from RNA reads based primarily on the duration of time a molecule spends transiting the pore. A major contribution of this manuscript is the implementation of a custom configuration for capturing tRNA reads that would otherwise be discarded during sequencing due to their short lengths. As described on the nano-tRNAseq repository, this workflow involves first performing a sequencing run using the MinKNOW default configuration, and saving out a bulk fast5 file. This bulk file is then re-run in a “simulation” mode in MinKNOW using a custom .toml file that contains a) alternative parameters for classifying RNA reads and adapter sequences based duration in the pore and b) a path to the bulk fast5 file. Using this approach, the authors report higher yield MinION runs across S. cerevisiae samples with and without deletions of several tRNA modification enzymes, under either normal growth conditions, heat, or oxidative stress. These comparisons enabled them to further characterize basecalling errors produced by select tRNA modifications."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "tRNA-seq logistics",
    "section": "",
    "text": "Direct RNA sequencing is uniquely suited to the study of tRNA biology because it enables the simultaneous capture of signals derived from a tRNA’s sequence and modification status. This site is a collection of practical information about sequencing tRNAs via nanopore, collated and maintained by Laura White in the Hesselberth Lab.\n\n\n\n\n\n\nWarning\n\n\n\nThis documentation has been written for RNA002 chemistry. ONT’s RNA004 direct RNA sequencing kit is expected to be released in early access mode in the 2nd half of 2023, and will use a different nanopore and helicase.\n\n\n\n\nNanopore direct RNA sequencing attaches specific adapters to the 3¬¥ end of native RNA molecules, enabling them to be threaded through a pore in a charged membrane. As the nucleic acid passes through the pore, it differentially occludes the flow of ions through the aperture in a sequence and modification-dependent fashion. These changes in current over time can be converted to nucleotide sequence, and also used to infer the presence of RNA modifications. The RNA002 sequencing protocol from Oxford Nanopore also includes an optional reverse transcription step that is thought to help linearize structured molecules and increase library throughput; however, this cDNA molecule is discarded when the native RNA strand is threaded through the pore.\n\n\n\ntRNAs are highly structured nucleic acids that are decorated with many RNA modifications (an average of 13 RNA modifications per tRNA molecule in budding yeast). A major limitation of previous tRNA sequencing methods was the necessity for reverse transcription to generate cDNA for Illumina sequencing, despite the fact that reverse transcriptases often stall on these molecules. Moreover, the size (70-100 nt) and structure of tRNAs require additional considerations when enriching for these molecules in sequencing libraries.\nMany tRNA sequencing workflows, including all nanopore tRNA sequencing protocols published to-date, have taken advantage of the unique molecular properties of tRNAs to add specific adapters to these molecules. All mature tRNAs have a 5¬¥ phosphate and an NCCA overhand on their 3¬¥end, to which the amino acid is added. This aminoacyl group will rapidly deacylate under non-acidic conditions, or can be specifically removed with base treatment. In the absence of an amino acid, the mature tRNA stem is then competent for ligation to a double stranded adapter using T4 RNA ligase 2.\n\n\n\nThis site provides an overview of all published strategies for generating nanopore tRNA sequencing libraries, as well as differences between these protocols and practical considerations for tRNA sequencing, alignment, and analysis. The Sequencing Settings section describes our implemention of a simpler RNA short read mode for the MinKNOW sequencing software to enable running and basecalling tRNA sequencing libraries in real time, without the need to save out fast5 bulk files for downstream simulation.\n\n\n\nOn our GitHub repository you will find reference files for aligning budding yeast and E. coli tRNA libraries prepared using each of the described workflows.\n\n\n\nThanks to:\n\nmembers of the Hesselberth Lab for listening to me vent about my library woes and providing useful suggestions\nAndroo Markham at Oxford Nanopore for advice on implementing live short read capture of RNAs in MinKNOW\nthe Novoa Lab for pointing the way to higher tRNA-seq yields with nano-tRNAseq"
  },
  {
    "objectID": "index.html#nanopore-sequencing-basics",
    "href": "index.html#nanopore-sequencing-basics",
    "title": "tRNA-seq logistics",
    "section": "",
    "text": "Nanopore direct RNA sequencing attaches specific adapters to the 3¬¥ end of native RNA molecules, enabling them to be threaded through a pore in a charged membrane. As the nucleic acid passes through the pore, it differentially occludes the flow of ions through the aperture in a sequence and modification-dependent fashion. These changes in current over time can be converted to nucleotide sequence, and also used to infer the presence of RNA modifications. The RNA002 sequencing protocol from Oxford Nanopore also includes an optional reverse transcription step that is thought to help linearize structured molecules and increase library throughput; however, this cDNA molecule is discarded when the native RNA strand is threaded through the pore."
  },
  {
    "objectID": "index.html#sequencing-trna",
    "href": "index.html#sequencing-trna",
    "title": "tRNA-seq logistics",
    "section": "",
    "text": "tRNAs are highly structured nucleic acids that are decorated with many RNA modifications (an average of 13 RNA modifications per tRNA molecule in budding yeast). A major limitation of previous tRNA sequencing methods was the necessity for reverse transcription to generate cDNA for Illumina sequencing, despite the fact that reverse transcriptases often stall on these molecules. Moreover, the size (70-100 nt) and structure of tRNAs require additional considerations when enriching for these molecules in sequencing libraries.\nMany tRNA sequencing workflows, including all nanopore tRNA sequencing protocols published to-date, have taken advantage of the unique molecular properties of tRNAs to add specific adapters to these molecules. All mature tRNAs have a 5¬¥ phosphate and an NCCA overhand on their 3¬¥end, to which the amino acid is added. This aminoacyl group will rapidly deacylate under non-acidic conditions, or can be specifically removed with base treatment. In the absence of an amino acid, the mature tRNA stem is then competent for ligation to a double stranded adapter using T4 RNA ligase 2."
  },
  {
    "objectID": "index.html#what-youll-find-here",
    "href": "index.html#what-youll-find-here",
    "title": "tRNA-seq logistics",
    "section": "",
    "text": "This site provides an overview of all published strategies for generating nanopore tRNA sequencing libraries, as well as differences between these protocols and practical considerations for tRNA sequencing, alignment, and analysis. The Sequencing Settings section describes our implemention of a simpler RNA short read mode for the MinKNOW sequencing software to enable running and basecalling tRNA sequencing libraries in real time, without the need to save out fast5 bulk files for downstream simulation."
  },
  {
    "objectID": "index.html#associated-files-code",
    "href": "index.html#associated-files-code",
    "title": "tRNA-seq logistics",
    "section": "",
    "text": "On our GitHub repository you will find reference files for aligning budding yeast and E. coli tRNA libraries prepared using each of the described workflows."
  },
  {
    "objectID": "index.html#acknowledgements",
    "href": "index.html#acknowledgements",
    "title": "tRNA-seq logistics",
    "section": "",
    "text": "Thanks to:\n\nmembers of the Hesselberth Lab for listening to me vent about my library woes and providing useful suggestions\nAndroo Markham at Oxford Nanopore for advice on implementing live short read capture of RNAs in MinKNOW\nthe Novoa Lab for pointing the way to higher tRNA-seq yields with nano-tRNAseq"
  }
]